** server (finished!!) :) **
============================
* Arreglar BUG número #238283: El servidor passe completament dels separadors, i procesa les dades rebudes per cad PUSH del protocol TCP, i no hauria de ser així. Ara funciona, pq per defecte quan s'envia un /n, les implementacions de TCP actuals envien automaticament un PUSH, pero si per exemple configuren telnet per envia un PUSH per cada caracter la cosa no acaba de funcionar. (Per exemple el hasecorp telnet es famós en enviar un PUSH per cada carácter)
* (Funcionalitat Extra) Processar parámetres com la respectiva versió en c.
* (Funcionalitat Extra) Afegir les extensions que vulgem al protocol.
* Beta testing, intentar petar-lo i destroçar-lo, comprobar lo que aguanta...
* Polirlo
* Ya tah!


** client **
============
* Acabo d'enganxar el UDP a sako.... ja se k es una puta porkeria xo abasn d'arreglaro vull parlar amb tu!!! konektat al amsn home xDD
* Refer la porqueria actual, a algo més bonic, similar a la conversió server.c <-> xserver.cpp, seguint com a guia la implementació feta amb Python
* Inicialitzacio
* Implementar el protocol
* Conexions UDP (p2p) amb els clients
* Polirlo
* GUI ;)

Doncs, es veritat allo que diuen, que Python va molt bé per diseñar programes que després acabarás fent amb C++ ;)

** Joc De proves (al final) **
==============================
* Implementar una serie de scripts, programes i proves malicioses per exprimir el servidor i el client al extrem. Aquestos mateixos scripts els farem anar a l'hora de fer el peer review.

** Documentació del codi (al final) **
======================================
* Documentar tot el codi al estil Javadoc

** Documentació (al final del final del finai...) **
====================================================
* Un Fucking Manual de compilació, execució i/o instalació del servidor/client.
* Un document ple de rotllos de justificacions i contrajustificacions del disseny.


